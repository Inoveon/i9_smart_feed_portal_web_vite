#!/bin/bash

# Script de Configura√ß√£o de Chave SSH para Deploy
# Configura autentica√ß√£o via chave SSH para o servidor de deploy

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configura√ß√µes
SERVER_HOST="10.0.20.11"
SSH_KEY_PATH="$HOME/.ssh/id_rsa_i9_deploy"
ENV_FILE=".env.deploy"

echo -e "${GREEN}üîê Configura√ß√£o de Chave SSH para Deploy${NC}"
echo -e "${BLUE}============================================${NC}"
echo ""

# 1. Verificar/Configurar vari√°vel de ambiente SSH_USER
if [ -f "$ENV_FILE" ]; then
    source "$ENV_FILE"
fi

if [ -z "$SSH_USER" ]; then
    echo -e "${YELLOW}üìù Configura√ß√£o inicial necess√°ria${NC}"
    read -p "Digite o usu√°rio SSH para o servidor: " input_user
    SSH_USER="${input_user}"
    
    # Salvar no arquivo de ambiente
    echo "# Configura√ß√µes de Deploy" > "$ENV_FILE"
    echo "export SSH_USER=\"$SSH_USER\"" >> "$ENV_FILE"
    echo "export SSH_HOST=\"$SERVER_HOST\"" >> "$ENV_FILE"
    echo "export SSH_KEY=\"$SSH_KEY_PATH\"" >> "$ENV_FILE"
    
    echo -e "${GREEN}‚úÖ Vari√°vel SSH_USER salva em $ENV_FILE${NC}"
    echo ""
    
    # Adicionar ao .gitignore se n√£o estiver
    if ! grep -q "^.env.deploy$" .gitignore 2>/dev/null; then
        echo ".env.deploy" >> .gitignore
        echo -e "${YELLOW}üìù Adicionado $ENV_FILE ao .gitignore${NC}"
    fi
else
    echo -e "${BLUE}‚ÑπÔ∏è  Usando usu√°rio: ${SSH_USER}${NC}"
    read -p "Pressione Enter para continuar ou digite um novo usu√°rio: " new_user
    if [ ! -z "$new_user" ]; then
        SSH_USER="$new_user"
        sed -i.bak "s/export SSH_USER=.*/export SSH_USER=\"$SSH_USER\"/" "$ENV_FILE"
        echo -e "${GREEN}‚úÖ Usu√°rio atualizado${NC}"
    fi
fi

echo ""

# 2. Pedir senha para configura√ß√£o inicial
echo -e "${YELLOW}üîë Digite a senha para ${SSH_USER}@${SERVER_HOST}${NC}"
echo -e "${BLUE}(Senha necess√°ria apenas para configura√ß√£o inicial)${NC}"
read -s -p "Senha: " SSH_PASSWORD
echo ""
echo ""

# 3. Testar conex√£o com senha
echo -e "${YELLOW}üîç Testando conex√£o com o servidor...${NC}"
if sshpass -p "$SSH_PASSWORD" ssh -o ConnectTimeout=5 -o StrictHostKeyChecking=no ${SSH_USER}@${SERVER_HOST} "echo 'Conex√£o OK'" > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Conex√£o com senha bem-sucedida${NC}"
else
    echo -e "${RED}‚ùå Erro: N√£o foi poss√≠vel conectar. Verifique usu√°rio e senha.${NC}"
    exit 1
fi

# 4. Verificar se j√° existe chave configurada
echo ""
echo -e "${YELLOW}üîç Verificando configura√ß√£o de chave SSH existente...${NC}"

if [ -f "$SSH_KEY_PATH" ]; then
    echo -e "${BLUE}‚ÑπÔ∏è  Chave SSH encontrada em $SSH_KEY_PATH${NC}"
    
    # Testar se a chave funciona
    if ssh -o ConnectTimeout=5 -o StrictHostKeyChecking=no -i "$SSH_KEY_PATH" ${SSH_USER}@${SERVER_HOST} "echo 'OK'" > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ Chave SSH j√° est√° configurada e funcionando!${NC}"
        echo ""
        echo -e "${BLUE}‚ÑπÔ∏è  Para fazer deploy, use:${NC}"
        echo -e "    ${YELLOW}make deploy-homolog${NC}"
        echo -e "    ${YELLOW}./deploy.sh homolog${NC}"
        exit 0
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Chave existe mas n√£o est√° autorizada no servidor${NC}"
    fi
else
    echo -e "${YELLOW}üìù Chave SSH n√£o encontrada. Ser√° criada uma nova.${NC}"
fi

# 5. Gerar chave SSH se n√£o existir
if [ ! -f "$SSH_KEY_PATH" ]; then
    echo ""
    echo -e "${YELLOW}üîë Gerando nova chave SSH...${NC}"
    ssh-keygen -t rsa -b 4096 -f "$SSH_KEY_PATH" -N "" -C "i9-deploy@${HOSTNAME}"
    echo -e "${GREEN}‚úÖ Chave SSH gerada${NC}"
fi

# 6. Copiar chave para o servidor
echo ""
echo -e "${YELLOW}üì§ Copiando chave p√∫blica para o servidor...${NC}"

# Criar comando para adicionar a chave
PUB_KEY=$(cat "${SSH_KEY_PATH}.pub")
sshpass -p "$SSH_PASSWORD" ssh ${SSH_USER}@${SERVER_HOST} "
    mkdir -p ~/.ssh
    chmod 700 ~/.ssh
    echo '$PUB_KEY' >> ~/.ssh/authorized_keys
    chmod 600 ~/.ssh/authorized_keys
"

echo -e "${GREEN}‚úÖ Chave p√∫blica adicionada ao servidor${NC}"

# 7. Testar conex√£o com chave
echo ""
echo -e "${YELLOW}üß™ Testando conex√£o com chave SSH...${NC}"

if ssh -o ConnectTimeout=5 -o StrictHostKeyChecking=no -i "$SSH_KEY_PATH" ${SSH_USER}@${SERVER_HOST} "echo 'Teste bem-sucedido'" > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Conex√£o com chave SSH funcionando perfeitamente!${NC}"
else
    echo -e "${RED}‚ùå Erro ao conectar com chave SSH${NC}"
    exit 1
fi

# 8. Configurar SSH config para facilitar
echo ""
echo -e "${YELLOW}üìù Configurando SSH config...${NC}"

SSH_CONFIG="$HOME/.ssh/config"
if ! grep -q "Host i9-deploy" "$SSH_CONFIG" 2>/dev/null; then
    cat >> "$SSH_CONFIG" << EOF

# i9 Smart Deploy Server
Host i9-deploy
    HostName ${SERVER_HOST}
    User ${SSH_USER}
    IdentityFile ${SSH_KEY_PATH}
    StrictHostKeyChecking no
EOF
    echo -e "${GREEN}‚úÖ Configura√ß√£o SSH adicionada${NC}"
else
    echo -e "${BLUE}‚ÑπÔ∏è  Configura√ß√£o SSH j√° existe${NC}"
fi

# 9. Criar alias no bash profile
echo ""
echo -e "${YELLOW}üìù Configurando aliases...${NC}"

SHELL_PROFILE="$HOME/.zshrc"
if [ ! -f "$SHELL_PROFILE" ]; then
    SHELL_PROFILE="$HOME/.bashrc"
fi

if ! grep -q "alias i9-ssh" "$SHELL_PROFILE" 2>/dev/null; then
    echo "" >> "$SHELL_PROFILE"
    echo "# i9 Smart Deploy Aliases" >> "$SHELL_PROFILE"
    echo "alias i9-ssh='ssh i9-deploy'" >> "$SHELL_PROFILE"
    echo "alias i9-deploy='cd $(pwd) && ./deploy.sh'" >> "$SHELL_PROFILE"
    echo -e "${GREEN}‚úÖ Aliases configurados em $SHELL_PROFILE${NC}"
else
    echo -e "${BLUE}‚ÑπÔ∏è  Aliases j√° configurados${NC}"
fi

# 10. Resumo final
echo ""
echo -e "${GREEN}üéâ Configura√ß√£o Conclu√≠da com Sucesso!${NC}"
echo -e "${BLUE}============================================${NC}"
echo ""
echo -e "${YELLOW}üìã Resumo da Configura√ß√£o:${NC}"
echo -e "   ${BLUE}Servidor:${NC} ${SERVER_HOST}"
echo -e "   ${BLUE}Usu√°rio:${NC} ${SSH_USER}"
echo -e "   ${BLUE}Chave SSH:${NC} ${SSH_KEY_PATH}"
echo -e "   ${BLUE}Config:${NC} ${ENV_FILE}"
echo ""
echo -e "${YELLOW}üöÄ Como usar:${NC}"
echo -e "   ${GREEN}Deploy para homologa√ß√£o:${NC}"
echo -e "      make deploy-homolog"
echo -e "      ./deploy.sh homolog"
echo ""
echo -e "   ${GREEN}Conectar ao servidor:${NC}"
echo -e "      ssh i9-deploy"
echo -e "      i9-ssh (ap√≥s recarregar terminal)"
echo ""
echo -e "   ${GREEN}Ver logs:${NC}"
echo -e "      make deploy-logs"
echo ""
echo -e "${BLUE}‚ÑπÔ∏è  Vari√°veis de ambiente salvas em ${ENV_FILE}${NC}"
echo -e "${BLUE}‚ÑπÔ∏è  Para recarregar: source ${ENV_FILE}${NC}"